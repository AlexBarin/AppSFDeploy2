name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/workflows/**'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '.github/workflows/**'

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java: [17]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Maven
        uses: s4u/maven-settings-action@v2


      - name: Debug workspace
        run: ls -R    
      - name: Check Java version
        run: java -version
      - name: Check Maven version
        run: mvn -v


      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -X clean install

      - name: Run tests
        run: mvn test

  deploy:
    needs: build-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Maven
        uses: s4u/maven-settings-action@v2


      - name: Debug workspace
        run: ls -R    
      - name: Check Java version
        run: java -version
      - name: Check Maven version
        run: mvn -v


      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -X clean install

      - name: Run tests
        run: mvn test
      
      - name: Deploy to Ubuntu Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          PATH_JAVA: ${{ secrets.PATH_JAVA }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
          scp -r $PATH_JAVA alex@$SERVER_IP:$DEPLOY_PATH
          ssh ubuntu@$SERVER_IP "sudo systemctl restart my-java-service"
